<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>hung.com.redis</groupId>
	<artifactId>ResdisTest</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jackson.version>2.12.3</jackson.version>
		<log4j.version>2.13.2</log4j.version>
	</properties>

	<dependencies>
		<!-- https://logging.apache.org/log4j/2.x/maven-artifacts.html -->
		<!-- guide dùng implement log4j2 mà ko phải đổi source code log cũ đi: JUL, slf4j, log4j2x, appache commons logging bridge -->
		<!-- bản chất là dùng Java SPI: Service Provider Interface. -->
		<!-- log4j2 lúc này sẽ implement SPI của slf4j, JUL,... -->
		<!-- đây là bridge để thay logback implement = log4j2 implement -->
		<!-- file config sẽ theo log implement Class là log4j2 -->
		<!-- xóa bỏ thu viện này để dùng lại logback-core implement -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<!-- Version của api và core phải giống nhau, nếu ko sẽ báo lỗi -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- Asynchronous Logging: nếu thiều lib này sẽ báo lỗi (need file log4j2.component.properties) -->
		<!-- Synchronous logging: nếu thiếu lib này ko báo lỗi -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.4.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>4.1.1</version>
		</dependency>

		<!-- Jackson -->
		<!-- json chỉ cần thư viện này là đủ: core và annotation là dependencies sẽ đc add vào -->
		<!-- nếu có 2 version Jackson (1 của Vertx) thì nó sẽ ko download đúng, vì thế cần add core và annotation vào -->
		<!-- csv, yaml đều phải dùng nó. Vì nó tạo ObjectNode, ArrayNode rồi mới convert về java Object -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
	</dependencies>


	<build>
		<!-- -->
		<plugins>
			<!-- plugin này sẽ gọi tới javac ở $JAVA_HOME enviroment trỏ tới JDK folder -->
			<!-- các config của javac sẽ tương ứng với mục configuration ở maven-compiler-plugin -->
			<!-- java là dynamic compile optimize runtime nên ko cần compiler optimize options -->
			<!-- compile ở đây là ra bytecode, ko phải là binary code giống static compile -->
			<!-- thông tin debug dùng để map sourceCode. ko tác động tới việc dynamic compile binary ở runtime -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<!-- cho Plugin biết syntax source *.java là version 1.8 (JDK >= 1.8) -->
					<!-- java 8 = 1.8 -->
					<!-- java 11 = 11 -->
					<!-- java 17 = 17 -->
					<source>1.8</source>
					<!-- compile compatible để run trên JVM 1.8 (JDK >= 1.8) -->
					<!-- Hiện tại dùng JDK 17 là LTS long term support (dùng Oracle or OpenJDK đều ok) -->
					<target>1.8</target>
					<!-- cho Plugin biết *.java đc mã hóa UTF8 -->
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

		</plugins>

	</build>

</project>